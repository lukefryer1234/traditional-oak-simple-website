"use client";

import React, { useState, useEffect } from 'react';
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from "@/components/ui/table";
import { Badge } from "@/components/ui/badge";
import { Tabs, TabsContent, TabsList, TabsTrigger } from "@/components/ui/tabs";
import { Avatar, AvatarFallback, AvatarImage } from "@/components/ui/avatar";
import { 
  BarChart3, 
  Mail, 
  Phone, 
  User, 
  FileText, 
  Clock, 
  ShoppingCart, 
  ChevronRight, 
  Loader2, 
  MoreHorizontal,
  UserPlus 
} from 'lucide-react';
import { fetchRecentLeadsAction, fetchRecentContactsAction, fetchCustomerSummaryAction } from './actions';
import Link from 'next/link';
import { useToast } from '@/hooks/use-toast';

// Type Definitions for CRM dashboard
interface CustomerSummary {
  totalCustomers: number;
  totalLeads: number;
  openInquiries: number;
  averageConversionRate: number;
}

interface Lead {
  id: string;
  name: string;
  email: string;
  source: string;
  status: 'New' | 'Contacted' | 'Qualified' | 'Proposal' | 'Converted' | 'Lost';
  createdAt: string;
  notes?: string;
}

interface Contact {
  id: string;
  contactType: 'Contact Form' | 'Custom Order' | 'Email' | 'Phone';
  customerName: string;
  customerEmail: string;
  subject?: string;
  date: string;
  status: 'New' | 'Replied' | 'Closed';
}

// Helper function to get badge variant based on status
const getStatusVariant = (status: string): "default" | "secondary" | "outline" | "destructive" => {
  switch (status) {
    case 'New': return 'default';
    case 'Contacted': return 'secondary';
    case 'Qualified': return 'secondary'; 
    case 'Proposal': return 'outline';
    case 'Converted': return 'default';
    case 'Lost': return 'destructive';
    case 'Replied': return 'secondary';
    case 'Closed': return 'outline';
    default: return 'default';
  }
};

export default function CrmDashboardPage() {
  const [summary, setSummary] = useState<CustomerSummary>({
    totalCustomers: 0,
    totalLeads: 0,
    openInquiries: 0,
    averageConversionRate: 0
  });
  const [recentLeads, setRecentLeads] = useState<Lead[]>([]);
  const [recentContacts, setRecentContacts] = useState<Contact[]>([]);
  const [isLoading, setIsLoading] = useState(true);
  const { toast } = useToast();

  const loadData = async () => {
    setIsLoading(true);
    try {
      const [summaryData, leadsData, contactsData] = await Promise.all([
        fetchCustomerSummaryAction(),
        fetchRecentLeadsAction(),
        fetchRecentContactsAction()
      ]);
      
      setSummary(summaryData);
      setRecentLeads(leadsData);
      setRecentContacts(contactsData);
    } catch (error) {
      console.error("Error loading CRM data:", error);
      toast({
        variant: "destructive",
        title: "Failed to load CRM data",
        description: "There was an error loading the dashboard data. Please try again."
      });
    } finally {
      setIsLoading(false);
    }
  };

  useEffect(() => {
    loadData();
  }, []);

  return (
    <div className="space-y-8">
      <div className="flex flex-col sm:flex-row justify-between items-start sm:items-center gap-4">
        <h1 className="text-3xl font-bold">CRM Dashboard</h1>
        <Button asChild>
          <Link href="/admin/crm/leads">
            <UserPlus className="mr-2 h-4 w-4" /> Add New Lead
          </Link>
        </Button>
      </div>

      {/* Stats Cards */}
      <div className="grid gap-6 md:grid-cols-2 lg:grid-cols-4">
        <Card>
          <CardHeader className="flex flex-row items-center justify-between space-y-0 pb-2">
            <CardTitle className="text-sm font-medium">Total Customers</CardTitle>
            <User className="h-4 w-4 text-muted-foreground" />
          </CardHeader>
          <CardContent>
            <div className="text-2xl font-bold">{isLoading ? <Loader2 className="h-4 w-4 animate-spin inline-block" /> : summary.totalCustomers}</div>
            <p className="text-xs text-muted-foreground">Registered accounts</p>
          </CardContent>
        </Card>
        <Card>
          <CardHeader className="flex flex-row items-center justify-between space-y-0 pb-2">
            <CardTitle className="text-sm font-medium">Active Leads</CardTitle>
            <UserPlus className="h-4 w-4 text-muted-foreground" />
          </CardHeader>
          <CardContent>
            <div className="text-2xl font-bold">{isLoading ? <Loader2 className="h-4 w-4 animate-spin inline-block" /> : summary.totalLeads}</div>
            <p className="text-xs text-muted-foreground">In various stages</p>
          </CardContent>
        </Card>
        <Card>
          <CardHeader className="flex flex-row items-center justify-between space-y-0 pb-2">
            <CardTitle className="text-sm font-medium">Open Inquiries</CardTitle>
            <FileText className="h-4 w-4 text-muted-foreground" />
          </CardHeader>
          <CardContent>
            <div className="text-2xl font-bold">{isLoading ? <Loader2 className="h-4 w-4 animate-spin inline-block" /> : summary.openInquiries}</div>
            <p className="text-xs text-muted-foreground">Awaiting response</p>
          </CardContent>
        </Card>
        <Card>
          <CardHeader className="flex flex-row items-center justify-between space-y-0 pb-2">
            <CardTitle className="text-sm font-medium">Conversion Rate</CardTitle>
            <BarChart3 className="h-4 w-4 text-muted-foreground" />
          </CardHeader>
          <CardContent>
            <div className="text-2xl font-bold">{isLoading ? <Loader2 className="h-4 w-4 animate-spin inline-block" /> : `${summary.averageConversionRate}%`}</div>
            <p className="text-xs text-muted-foreground">Leads to customers</p>
          </CardContent>
        </Card>
      </div>

      {/* Customer Lifecycle and Recent Activity */}
      <Tabs defaultValue="recent">
        <TabsList>
          <TabsTrigger value="recent">Recent Activity</TabsTrigger>
          <TabsTrigger value="leads">Lead Management</TabsTrigger>
          <TabsTrigger value="customerJourney">Customer Journey</TabsTrigger>
        </TabsList>
        
        <TabsContent value="recent">
          <div className="space-y-4 mt-4">
            <Card>
              <CardHeader>
                <CardTitle>Recent Interactions</CardTitle>
                <CardDescription>Latest contact form submissions and custom order requests</CardDescription>
              </CardHeader>
              <CardContent>
                {isLoading ? (
                  <div className="flex justify-center py-8">
                    <Loader2 className="h-8 w-8 animate-spin text-muted-foreground" />
                  </div>
                ) : recentContacts.length > 0 ? (
                  <Table>
                    <TableHeader>
                      <TableRow>
                        <TableHead>Type</TableHead>
                        <TableHead>Customer</TableHead>
                        <TableHead>Date</TableHead>
                        <TableHead>Subject</TableHead>
                        <TableHead className="text-center">Status</TableHead>
                        <TableHead className="text-right">Actions</TableHead>
                      </TableRow>
                    </TableHeader>
                    <TableBody>
                      {recentContacts.map((contact) => (
                        <TableRow key={contact.id}>
                          <TableCell>
                            {contact.contactType === 'Contact Form' && <Mail className="h-4 w-4 inline mr-1" />}
                            {contact.contactType === 'Custom Order' && <FileText className="h-4 w-4 inline mr-1" />}
                            {contact.contactType === 'Email' && <Mail className="h-4 w-4 inline mr-1" />}
                            {contact.contactType === 'Phone' && <Phone className="h-4 w-4 inline mr-1" />}
                            {contact.contactType}
                          </TableCell>
                          <TableCell>{contact.customerName}</TableCell>
                          <TableCell>{new Date(contact.date).toLocaleDateString()}</TableCell>
                          <TableCell className="max-w-xs truncate">{contact.subject || 'N/A'}</TableCell>
                          <TableCell className="text-center">
                            <Badge variant={getStatusVariant(contact.status)}>{contact.status}</Badge>
                          </TableCell>
                          <TableCell className="text-right">
                            <Button variant="ghost" size="sm" asChild>
                              <Link href={`/admin/crm/contacts/${contact.id}`}>
                                View <ChevronRight className="ml-1 h-4 w-4" />
                              </Link>
                            </Button>
                          </TableCell>
                        </TableRow>
                      ))}
                    </TableBody>
                  </Table>
                ) : (
                  <div className="text-center py-6 text-muted-foreground">
                    No recent interactions found.
                  </div>
                )}
              </CardContent>
            </Card>
          </div>
        </TabsContent>

        <TabsContent value="leads">
          <div className="space-y-4 mt-4">
            <Card>
              <CardHeader>
                <CardTitle>Lead Pipeline</CardTitle>
                <CardDescription>Manage and track potential customers through your sales funnel</CardDescription>
              </CardHeader>
              <CardContent>
                {isLoading ? (
                  <div className="flex justify-center py-8">
                    <Loader2 className="h-8 w-8 animate-spin text-muted-foreground" />
                  </div>
                ) : recentLeads.length > 0 ? (
                  <Table>
                    <TableHeader>
                      <TableRow>
                        <TableHead>Name</TableHead>
                        <TableHead>Email</TableHead>
                        <TableHead>Source</TableHead>
                        <TableHead>Created</TableHead>
                        <TableHead className="text-center">Status</TableHead>
                        <TableHead className="text-right">Actions</TableHead>
                      </TableRow>
                    </TableHeader>
                    <TableBody>
                      {recentLeads.map((lead) => (
                        <TableRow key={lead.id}>
                          <TableCell className="font-medium">{lead.name}</TableCell>
                          <TableCell>{lead.email}</TableCell>
                          <TableCell>{lead.source}</TableCell>
                          <TableCell>{new Date(lead.createdAt).toLocaleDateString()}</TableCell>
                          <TableCell className="text-center">
                            <Badge variant={getStatusVariant(lead.status)}>{lead.status}</Badge>
                          </TableCell>
                          <TableCell className="text-right">
                            <Button variant="ghost" size="sm" asChild>
                              <Link href={`/admin/crm/leads/${lead.id}`}>
                                Manage <ChevronRight className="ml-1 h-4 w-4" />
                              </Link>
                            </Button>
                          </TableCell>
                        </TableRow>
                      ))}
                    </TableBody>
                  </Table>
                ) : (
                  <div className="text-center py-6 text-muted-foreground">
                    No leads found. Create a new lead to get started.
                  </div>
                )}
                <div className="mt-4 flex justify-end">
                  <Button asChild>
                    <Link href="/admin/crm/leads">
                      View All Leads <ChevronRight className="ml-1 h-4 w-4" />
                    </Link>
                  </Button>
                </div>
              </CardContent>
            </Card>
          </div>
        </TabsContent>

        <TabsContent value="customerJourney">
          <div className="space-y-4 mt-4">
            <Card>
              <CardHeader>
                <CardTitle>Customer Lifecycle Stages</CardTitle>
                <CardDescription>Track customer journey from lead to purchase and beyond</CardDescription>
              </CardHeader>
              <CardContent>
                <div className="relative">
                  <div className="grid grid-cols-1 md:grid-cols-5 gap-4">
                    <Card className="bg-muted/50">
                      <CardHeader className="pb-2">
                        <CardTitle className="text-sm">Lead Acquisition</CardTitle>
                      </CardHeader>
                      <CardContent>
                        <div className="text-2xl font-bold">{isLoading ? <Loader2 className="h-4 w-4 animate-spin inline-block" /> : (summary.totalLeads - summary.openInquiries)}</div>
                        <p className="text-xs text-muted-foreground">New leads in pipeline</p>
                      </CardContent>
                    </Card>
                    
                    <Card className="bg-muted/50">
                      <CardHeader className="pb-2">
                        <CardTitle className="text-sm">Engagement</CardTitle>
                      </CardHeader>
                      <CardContent>
                        <div className="text-2xl font-bold">{isLoading ? <Loader2 className="h-4 w-4 animate-spin inline-block" /> : summary.openInquiries}</div>
                        <p className="text-xs text-muted-foreground">Active conversations</p>
                      </CardContent>
                    </Card>
                    
                    <Card className="bg-muted/50">
                      <CardHeader className="pb-2">
                        <CardTitle className="text-sm">Opportunity</CardTitle>
                      </CardHeader>
                      <CardContent>
                        <div className="text-2xl font-bold">{isLoading ? <Loader2 className="h-4 w-4 animate-spin inline-block" /> : Math.round(summary.totalLeads * 0.4)}</div>
                        <p className="text-xs text-muted-foreground">Qualified prospects</p>
                      </CardContent>
                    </Card>
                    
                    <Card className="bg-muted/50">
                      <CardHeader className="pb-2">
                        <CardTitle className="text-sm">Conversion</CardTitle>
                      </CardHeader>
                      <CardContent>
                        <div className="text-2xl font-bold">{isLoading ? <Loader2 className="h-4 w-4 animate-spin inline-block" /> : Math.round(summary.totalLeads * summary.averageConversionRate / 100)}</div>
                        <p className="text-xs text-muted-foreground">Leads to customers</p>
                      </CardContent>
                    </Card>
                    
                    <Card className="bg-muted/50">
                      <CardHeader className="pb-2">
                        <CardTitle className="text-sm">Retention</CardTitle>
                      </CardHeader>
                      <CardContent>
                        <div className="text-2xl font-bold">{isLoading ? <Loader2 className="h-4 w-4 animate-spin inline-block" /> : Math.round(summary.totalCustomers * 0.7)}</div>
                        <p className="text-xs text-muted-foreground">Return customers</p>
                      </CardContent>
                    </Card>
                  </div>
                  
                  <div className="hidden md:block absolute top-1/2 left-0 right-0 h-0.5 bg-border -z-10 transform -translate-y-1/2" />
                </div>
                
                <div className="mt-8">
                  <Button variant="outline" asChild className="w-full">
                    <Link href="/admin/crm/analytics">
                      View Detailed Analytics <BarChart3 className="ml-2 h-4 w-4" />
                    </Link>
                  </Button>
                </div>
              </CardContent>
            </Card>
          </div>
        </TabsContent>
      </Tabs>

